<?xml version="1.0" encoding="UTF-8"?>

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:coa="http://stix.mitre.org/CourseOfAction-1"
	xmlns:stixCommon="http://stix.mitre.org/common-1"
	xmlns:openc2="http://stix.mitre.org/extensions/OpenC2StructuredCOA-1"
	xmlns:cybox="http://cybox.mitre.org/cybox-2"
	xmlns:SocketAddressObj="http://cybox.mitre.org/objects#SocketAddressObject-1"
	xmlns:URIObject="http://cybox.mitre.org/objects#URIObject-2"
	xmlns:AddressObject="http://cybox.mitre.org/objects#AddressObject-2"
	xmlns:NetworkConnectionObj="http://cybox.mitre.org/objects#NetworkConnectionObject-2"
	xmlns:cyboxCommon="http://cybox.mitre.org/common-2"
	xmlns:process_coa="http://stix.mitre.org/extensions/ProcessStructuredCourseOfAction-1"
	xmlns:network_coa="http://stix.mitre.org/NetworkCourseOfAction-1"
	xmlns:network.sdn_coa="http://stix.mitre.org/NetworkSDNCourseOfAction-1"
	xmlns:endpoint_coa="http://stix.mitre.org/EndpointStructuredCourseOfAction-1"
	targetNamespace="http://stix.mitre.org/extensions/OpenC2StructuredCOA-1"
	elementFormDefault="qualified" attributeFormDefault="unqualified"
	version="1.2" xml:lang="en" xmlns:pref="http://stix.mitre.org/NetworkCourseOfAction-1">
	
	<xs:import schemaLocation="network_course_of_action.xsd" namespace="http://stix.mitre.org/NetworkCourseOfAction-1"></xs:import>
	<xs:annotation>
		<xs:appinfo>
			<schema>
				STIX Extension - Structured Course of Action Instance
			</schema>
			<version>0.1</version>
			<short_description>
				Structured Threat Information eXpression (STIX)
				Extension - OpenC2 Structured Course of Action Instance
				- Schematic implementation for the using an OpenC2
				Structured Course of Action within the STIX structured
				cyber threat expression language. This extension
				leverages the Open Command and Control (OpenC2)
				framework developed by the COA Standardization Working
				Group. OpenC2 defines a conceptual language at a level
				of abstraction that enables unambiguous command and
				control of cyber defense components with enough
				generality to provide flexibility in the implementation
				by devices and accommodate future products. OpenC2
				defines a set of unambiguous terms for the actions, the
				target (object) of the actions, and the entities
				(actuators) that execute the action. OpenC2’s extensible
				framework for the commands accommodates specifiers and
				modifiers to further specify the targets, actuators, and
				actions. OpenC2 is defined at a level of abstraction
				such that it can be consumer-agnostic in terms of each
				organization’s network components, but through the use
				of specifiers and modifiers, enough detail can be added
				to carry out specific tasks on devices Complex courses
				of action can be constructed and shared.. In addition,
				although not part of this STIX extension, OpenC2
				provides capabilities for inter-organization
				coordination. For more information about OpenC2, please
				contact info@openc2.org
			</short_description>
		</xs:appinfo>
	</xs:annotation>
	<xs:import namespace="http://stix.mitre.org/CourseOfAction-1"
		schemaLocation="http://stix.mitre.org/XMLSchema/course_of_action/1.2/course_of_action.xsd" />
	<xs:import namespace="http://stix.mitre.org/common-1"
		schemaLocation="http://stix.mitre.org/XMLSchema/common/1.2/stix_common.xsd" />
	<xs:import namespace="http://cybox.mitre.org/cybox-2"
		schemaLocation="cybox/cybox_core.xsd" />
	<xs:import namespace="http://cybox.mitre.org/common-2"
		schemaLocation="cybox/cybox_common.xsd" />
	<xs:import
		namespace="http://cybox.mitre.org/objects#NetworkConnectionObject-2"
		schemaLocation="http://cybox.mitre.org/XMLSchema/objects/Network_Connection/2.1/Network_Connection_Object.xsd" />
	<xs:import
		namespace="http://cybox.mitre.org/objects#AddressObject-2"
		schemaLocation="http://cybox.mitre.org/XMLSchema/objects/Address/2.1/Address_Object.xsd" />
	<xs:import
		namespace="http://cybox.mitre.org/objects#SocketAddressObject-1"
		schemaLocation="http://cybox.mitre.org/XMLSchema/objects/Socket_Address/1.1/Socket_Address_Object.xsd" />
	<xs:import namespace="http://cybox.mitre.org/objects#URIObject-2"
		schemaLocation="http://cybox.mitre.org/XMLSchema/objects/URI/2.1/URI_Object.xsd" />
	<xs:import
		namespace="http://stix.mitre.org/NetworkCourseOfAction-1"
		schemaLocation="networkStructuredCOA.xsd" />
	<xs:import namespace="http://stix.mitre.org/NetworkSDNCourseOfAction-1"
		schemaLocation="networkSDNStructuredCOA.xsd"/>

	<xs:complexType name="OpenC2COA">
		<xs:annotation>
			<xs:documentation>
				The CourseOfActionType characterizes a Course of Action
				to be taken in regards to one of more cyber threats.
				NOTE: This construct is still in its early stages of
				maturity and will require a good deal of review and
				refinement.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="coa:CourseOfActionType">
				<xs:sequence>
					<xs:element name="Action"
						type="openc2:ActionType">
						<xs:annotation>
							<xs:documentation>
								All OpenC2 commands start with an ACTION
								which is a required field. ACTION
								indicates the type of command to perform
								such as gather and convey information,
								control activities and devices, and
								control permissions and access. The
								range of options and potential impact on
								the information system associated with a
								particular ACTION is a function of the
								ACTUATOR. For cases that involve
								multiple options for an ACTION, the
								default implementation is the one that
								has the least impact on the stability/
								operation of the system. An action can
								be extended with a MODIFIER to indicate
								an optional implementation of the
								action.
							</xs:documentation>
						</xs:annotation>
					</xs:element>

					<xs:element name="Target" type="openc2:TargetType"
						minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The TARGET is the object of the ACTION
								(or conversely, the ACTION is performed
								on the TARGET). Although, the majority
								of commands have a TARGET associated
								with the ACTION, there are high level
								ACTIONS where the TARGET is an optional
								parameter. TARGETS fall into classes
								(e.g., network, endpoint, application,
								data, and user) which can be further
								enumerated by the use of URLs, hashes,
								IP addresses, files, processes, domains,
								firewalls, routers).
							</xs:documentation>
						</xs:annotation>
					</xs:element>

					<xs:element name="Actuator"
						type="openc2:ActuatorType" minOccurs="0">
					</xs:element>

					<xs:element name="Modifier"
						type="openc2:ModifierType" minOccurs="0" maxOccurs="unbounded">
						<xs:annotation>
							<xs:documentation>
								"Modifiers" provide additional details
								about about the action such as time,
								periodicity, duration, and location. The
								modifier can be used to convey the need
								for additional status information about
								the execution of an action. Modifiers
								can be used to indicate whether the
								actuator should explicitly acknowledge
								receipt of the command, respond upon
								completion of the execution of the
								command, or provide some other status
								information. The requested
								`status/information will be carried in a
								RESPONSE.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
					<xs:element name="OpenC2_Structured_COA"
						type="openc2:OpenC2StructuredCOAType" minOccurs="0">
						<xs:annotation>
							<xs:documentation>
								The Structured_COA field enables the
								specification of an action-able
								structured representation for the
								CourseOfAction potentially for automated
								consumption and implementation.
							</xs:documentation>
							<xs:documentation>
								This field is implemented through the
								xsi:type extension mechanism. While STIX
								has not defined a default type, it has
								provided support for passing proprietary
								or externally defined structured courses
								of action using the Generic Structured
								COA extension. The Generic Structured
								COA extension is captured in the
								GenericStructuredCOAType in the
								http://stix.mitre.org/extensions/StructuredCOA#Generic-1
								namespace. This type is defined in the
								extensions/structured_coa/generic_structured_coa.xsd
								file or at the URL
								http://stix.mitre.org/XMLSchema/extensions/structured_coa/generic/1.1/generic_structured_coa.xsd.
							</xs:documentation>
						</xs:annotation>
					</xs:element>
				</xs:sequence>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="OpenC2StructuredCOAType">
		<xs:annotation>
			<xs:documentation>
				The OpenC2StructuredCOAType specifies an instantial
				extension from the abstract StructuredCOAType.
			</xs:documentation>
		</xs:annotation>
		<xs:complexContent>
			<xs:extension base="coa:StructuredCOAType">
				<xs:choice>
					<!--xs:element name = "endpointStructuredCOA" type="endpoint_coa:endpoint_COA" /-->
					<xs:element name="networkStructuredCOA" type="network_coa:NetworkStructuredCOAType" />
					<xs:element name="networkSDNStructuredCOA" type="network.sdn_coa:NetworkSDNStructuredCOAType" />
					<!--xs:element name="processStructuredCOA" type="process_coa:process_COA" /-->
				</xs:choice>
			</xs:extension>
		</xs:complexContent>
	</xs:complexType>

	<xs:complexType name="ActionType">
		<xs:annotation>
			<xs:documentation>
				All OpenC2 commands start with an ACTION. ACTION
				indicates the type of command to perform such as gather
				and convey information, control activities and devices,
				and control permissions and access. The range of options
				and potential impact on the information system
				associated with a particular ACTION is a function of the
				ACTUATOR.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Value" type="openc2:ActionVocab"
				minOccurs="1" maxOccurs="1">
			</xs:element>
			<xs:element name="Action_URI" type="xs:anyURI"></xs:element>
			<xs:choice>
				<xs:element name="Investigate" type="xs:string"
					minOccurs="0" />
				<xs:element name="Mitigate" type="xs:string"
					minOccurs="0" />
				<xs:element name="Remediate" type="xs:string"
					minOccurs="0" />
			</xs:choice>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="TargetType">
		<xs:annotation>
			<xs:documentation>
				The TARGET is the object of the ACTION (or conversely,
				the ACTION is performed on the TARGET). Although, the
				majority of commands have a TARGET associated with the
				ACTION, there are high level ACTIONS where the TARGET is
				an optional parameter. TARGETS fall into classes (e.g.,
				network, endpoint, application, data, and user) which
				can be further enumerated by the use of URLs, hashes, IP
				addresses, files, processes, domains, firewalls,
				routers).
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Value" type="xs:string" minOccurs="1"
				maxOccurs="1">
			</xs:element>
			<xs:element name="Specifier"
				type="cyboxCommon:ObjectPropertiesType" minOccurs="0"
				maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Specifiers further identify targets or
						actuators, individuals, or groups. Specifiers
						are associated with the TARGET or ACTUATOR.
					</xs:documentation>
				</xs:annotation>
			</xs:element>
			<xs:element name="Target_URI" type="xs:anyURI"
				minOccurs="0">
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="ActuatorType">
		<xs:annotation>
			<xs:documentation>
				An ACTUATOR is the entity that executes the action . The
				ACTUATOR is the subject of the ACTION which performs the
				ACTION to the TARGET. levels of abstraction and
				functionality for an ACTUATOR ranging from a specific
				sensor to an entire system or even system of systems.
			</xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Value" type="openc2:ActuatorVocab"
				minOccurs="1" maxOccurs="1">
			</xs:element>
			<xs:element name="Specifier" type="openc2:SpecifierType"
				minOccurs="0" maxOccurs="unbounded">
				<xs:annotation>
					<xs:documentation>
						Specifiers further identify targets or
						actuators, individuals, or groups. Specifiers
						are associated with the TARGET or ACTUATOR.
						Specifier could also include a URI to a
						particular actuator
					</xs:documentation>
				</xs:annotation>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="ModifierType">
		<xs:annotation>
			<xs:documentation></xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="openc2:ModifierVocab"
				minOccurs="0">
			</xs:element>
			<xs:element name="Value" type="xs:anySimpleType"
				minOccurs="0">
			</xs:element>
			<xs:element name="report-to" type="URIObjectType"
				maxOccurs="1" minOccurs="0" />
			<xs:element name="priority" type="unsignedInt" maxOccurs="1"
				minOccurs="0" />
			<xs:element name="where" type="AddressObjectType"
				maxOccurs="1" minOccurs="0" />
			<xs:element name="delay" type="time" maxOccurs="1"
				minOccurs="0" />
			<xs:element name="when" maxOccurs="1" minOccurs="0">
				<simpleType>
					<restriction base="string">
						<enumeration value="ingress"></enumeration>
						<enumeration value="egress"></enumeration>
					</restriction>
				</simpleType>
			</xs:element>
			<xs:element name="threat-type" maxOccurs="1"
				minOccurs="0">
				<simpleType>
					<restriction base="string">
						<enumeration value="passive-capture" />
						<enumeration value="active-scan" />
						<enumeration value="spoof" />
						<enumeration value="mitm" />
						<enumeration value="dos" />
						<enumeration value="all" />
					</restriction>
				</simpleType>
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:complexType name="SpecifierType">
		<xs:annotation>
			<xs:documentation></xs:documentation>
		</xs:annotation>
		<xs:sequence>
			<xs:element name="Name" type="openc2:SpecifierVocab"
				minOccurs="1" maxOccurs="1">
			</xs:element>
			<xs:element name="Value" type="xs:string" minOccurs="1"
				maxOccurs="1">
			</xs:element>
		</xs:sequence>
	</xs:complexType>

	<xs:simpleType name="ActionVocab">
		<xs:annotation>
			<xs:documentation>
				The default set of values to use for expressing an
				OpenC2 action.
			</xs:documentation>
			<xs:appinfo>
				<version>1.0</version>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="DENY">
				<xs:annotation>
					<xs:documentation>
						The DENY action prevents a certain event or
						action from completing.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="CONTAIN">
				<xs:annotation>
					<xs:documentation>
						The CONTAIN action stipulates the isolation of a
						file or process such that it cannot modify or
						access assets that support the business or
						operations of the organization.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="ALLOW">
				<xs:annotation>
					<xs:documentation>
						The ALLOW action permits the access to or
						execution of something.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="START">
				<xs:annotation>
					<xs:documentation>
						The START action initiates a system or an
						activity.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="STOP">
				<xs:annotation>
					<xs:documentation>
						The STOP action halts a system or ends an
						activity.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RESTART">
				<xs:annotation>
					<xs:documentation>
						The RESTART action conducts a STOP of a system
						or an activity followed by a START of a system
						or an activity.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="PAUSE">
				<xs:annotation>
					<xs:documentation>
						The PAUSE action ceases a system or activity
						while maintaining state.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RESUME">
				<xs:annotation>
					<xs:documentation>
						The RESUME action starts a system or activity
						from a paused state.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SET">
				<xs:annotation>
					<xs:documentation>
						The SET action changes a configuration or state
						of a managed entity within an IT system.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="UPDATE">
				<xs:annotation>
					<xs:documentation>
						The UPDATE action instructs the component to
						retrieve and process a large or comprehensive
						software update, reconfiguration or some other
						update.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MOVE">
				<xs:annotation>
					<xs:documentation>
						The MOVE action changes the location of a file,
						subnet, network, or, process.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="REDIRECT">
				<xs:annotation>
					<xs:documentation>
						The REDIRECT action changes the path of a flow
						of traffic other than its original or intended
						path.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DELETE">
				<xs:annotation>
					<xs:documentation>
						The DELETE action removes data and files.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SNAPSHOT">
				<xs:annotation>
					<xs:documentation>
						The SNAPSHOT action records and stores the state
						of a target at an instant in time.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DETONATE">
				<xs:annotation>
					<xs:documentation>
						The DETONATE action executes and observes the
						behavior of a file in a manner that isolates the
						file from assets that support the business or
						operations of the organization.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="RESTORE">
				<xs:annotation>
					<xs:documentation>
						The RESTORE action deletes and/or replaces
						files, settings, or attributes such that the
						state of the system is identical to some
						previous state.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SAVE">
				<xs:annotation>
					<xs:documentation>
						The SAVE action commits data or system state to
						memory.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="MODIFY">
				<xs:annotation>
					<xs:documentation>
						The MODIFY action augments, enhances,
						transforms, or changes some aspect of a system.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="THROTTLE">
				<xs:annotation>
					<xs:documentation>
						The THROTTLE action adjusts the throughput of
						the entire data flow to a different rate.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="DELAY">
				<xs:annotation>
					<xs:documentation>
						The DELAY action stops or holds up an activity
						or data transmittal.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SUBSTITUTE">
				<xs:annotation>
					<xs:documentation>
						The SUBSTITUTE action replaces all or part of
						the data, content or payload in the least
						detectable manner.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="COPY">
				<xs:annotation>
					<xs:documentation>
						The COPY action duplicates a file or data flow.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
			<xs:enumeration value="SYNC">
				<xs:annotation>
					<xs:documentation>
						The SYNC action synchronizes a sensor or
						actuator with other system components.
					</xs:documentation>
				</xs:annotation>
			</xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ActuatorVocab">
		<xs:annotation>
			<xs:documentation>
				The default set of values to use for expressing an
				OpenC2 actuator.
			</xs:documentation>
			<xs:appinfo>
				<version>1.0</version>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="endpoint" />
			<xs:enumeration value="endpoint.digital-telephone-handset" />
			<xs:enumeration value="endpoint.laptop" />
			<xs:enumeration value="endpoint.pos-terminal" />
			<xs:enumeration value="endpoint.printer" />
			<xs:enumeration value="endpoint.sensor" />
			<xs:enumeration value="endpoint.server" />
			<xs:enumeration value="endpoint.smart-meter" />
			<xs:enumeration value="endpoint.smart-phone" />
			<xs:enumeration value="endpoint.tablet" />
			<xs:enumeration value="endpoint.workstation" />
			<xs:enumeration value="network" />
			<xs:enumeration value="network.bridge" />
			<xs:enumeration value="network.firewall" />
			<xs:enumeration value="network.gateway" />
			<xs:enumeration value="network.guard" />
			<xs:enumeration value="network.hips" />
			<xs:enumeration value="network.hub" />
			<xs:enumeration value="network.ids" />
			<xs:enumeration value="network.ips" />
			<xs:enumeration value="network.modem" />
			<xs:enumeration value="network.nic" />
			<xs:enumeration value="network.proxy" />
			<xs:enumeration value="network.router" />
			<xs:enumeration value="network.security_manager" />
			<xs:enumeration value="network.sense_making" />
			<xs:enumeration value="network.sensor" />
			<xs:enumeration value="network.switch" />
			<xs:enumeration value="network.vpn" />
			<xs:enumeration value="network.wap" />
			<xs:enumeration value="process" />
			<xs:enumeration value="process.aaa-server" />
			<xs:enumeration value="process.anti-virus-scanner" />
			<xs:enumeration value="process.connection-scanner" />
			<xs:enumeration value="process.directory-service" />
			<xs:enumeration value="process.dns-server" />
			<xs:enumeration value="process.email-service" />
			<xs:enumeration value="process.file-scanner" />
			<xs:enumeration value="process.location-service" />
			<xs:enumeration value="process.network-scanner" />
			<xs:enumeration value="process.remediation-service" />
			<xs:enumeration value="process.reputation-service" />
			<xs:enumeration value="process.sandbox" />
			<xs:enumeration value="process.virtualization-service" />
			<xs:enumeration value="process.vulnerability-scanner" />
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="ModifierVocab" final="#all">
		<xs:annotation>
			<xs:documentation>
				The default set of values to use for expressing an
				OpenC2 modifier.
			</xs:documentation>
			<xs:appinfo>
				<version>1.0</version>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:time">
			<xs:enumeration value="delay" />
			<xs:enumeration value="duration" />
			<xs:enumeration value="frequency" />
			<xs:enumeration value="response" />
			<xs:enumeration value="time" />
			<xs:enumeration value="value"></xs:enumeration>
		</xs:restriction>
	</xs:simpleType>

	<xs:simpleType name="SpecifierVocab">
		<xs:annotation>
			<xs:documentation>
				The default set of values to use for expressing an
				OpenC2 modifier.
			</xs:documentation>
			<xs:appinfo>
				<version>1.0</version>
			</xs:appinfo>
		</xs:annotation>
		<xs:restriction base="xs:string">
			<xs:enumeration value="other" />
		</xs:restriction>
	</xs:simpleType>

</xs:schema>
